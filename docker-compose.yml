version: '3'
services:
  db:
    networks:
      - appnet
    build:
      context: ./services/db
    ports:
      - "5432:5432"
    volumes:
      - ./services/db/data:/var/lib/postgresql/data:z
    environment:
      POSTGRES_PASSWORD: "password"
  ts-web:
    networks:
    - appnet
    build:
      context: ./ts-web
      dockerfile: Dockerfile-dev
    ports:
      - "3000:3000"
    volumes:
      - ./ts-web:/app:z
    environment:
      AUTH0_DOMAIN: "${AUTH0_DOMAIN}"
      AUTH0_CLIENT_ID: "${AUTH0_CLIENT_ID}"
      AUTH0_AUDIENCE: "${AUTH0_AUDIENCE}"
      NODE_ENV: development
    command: "/app/node_modules/.bin/webpack-dev-server --debug --devtool cheap-module-source-map --output-pathinfo --history-api-fallback --hot --inline --progress --colors --port 3000 --host 0.0.0.0"
  main-api:
    networks:
    - appnet
    build:
      context: ./services/main-api
      dockerfile: Dockerfile-dev
    ports:
      - "443:443"
    volumes:
      - ./services/main-api:/app:z
    environment:
      AUTH0_AUDIENCE: "${AUTH0_AUDIENCE}"
      NODE_ENV: development
    depends_on:
      - db
    command: "/app/node_modules/.bin/nodemon index.js"
networks:
  appnet:
    driver: "bridge"
volumes:
  data:
    driver: "local"
